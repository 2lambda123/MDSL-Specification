/*
// optional within 'delivering' * generated by Xtext 2.20.0
 */
package io.mdsl.validation;

import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.validation.CheckType;
import org.eclipse.xtext.validation.EValidatorRegistrar;

import io.mdsl.apiDescription.ApiDescriptionPackage;
import io.mdsl.apiDescription.IntegrationScenario;
import io.mdsl.apiDescription.IntegrationStory;


/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class ScenarioValidator extends AbstractMDSLValidator {
	 
	public final static String SCENARIO_FOUND = "SCENARIO_FOUND";
	public final static String STORY_FOUND = "STORY_FOUND";
	
	@Override
	public void register(EValidatorRegistrar registrar) {
		// not needed for classes used as ComposedCheck
	}

	@Check(CheckType.FAST)
	public void analyzeFlowStep(IntegrationScenario requirements) {
		String scenarioName = requirements.getName();
		int storyCount = requirements.getStories().size();
		info(scenarioName + " specifies " + storyCount + " story/stories.", requirements, ApiDescriptionPackage.eINSTANCE.getIntegrationScenario_Name(), SCENARIO_FOUND);
	}
	
	@Check(CheckType.FAST)
	public void analyzeFlowStep(IntegrationStory requirement) {
		info("Story calls for realization.", requirement, ApiDescriptionPackage.eINSTANCE.getIntegrationStory_Action(), STORY_FOUND);
	}
}