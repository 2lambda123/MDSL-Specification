openapi: 3.0.1
info:
  title: RESTBucksResourceAPI
  version: '"Maturity Level 1/2, example Version 0.2"'
servers:
- url: http://restbucks.com/order
tags:
- name: RESTBucksProvider-RESTBucksHome
  externalDocs:
    description: The role of this endpoint, offering a OrderManagementEndpoint contract,
      is Processing Resource pattern
    url: https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource.html
- name: RESTBucksProvider-Orders
  externalDocs:
    description: The role of this endpoint, offering a OrderManagementEndpoint contract,
      is Processing Resource pattern
    url: https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource.html
- name: RESTBucksProvider-PaymentResource
  externalDocs:
    description: The role of this endpoint, offering a OrderManagementEndpoint contract,
      is Processing Resource pattern
    url: https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource.html
- name: RESTBucksProvider-ReceiptResource
  externalDocs:
    description: The role of this endpoint, offering a OrderManagementEndpoint contract,
      is Processing Resource pattern
    url: https://microservice-api-patterns.org/patterns/responsibility/endpointRoles/ProcessingResource.html
paths:
  /http://restbucks.com/order:
    summary: activity-oriented endpoint
    post:
      tags:
      - RESTBucksProvider-RESTBucksHome
      summary: write only
      description: This operation realizes the [State Creation Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateCreationOperation.html)
        pattern.
      operationId: RESTBucksHome-placeOrder
      requestBody:
        content:
          application/vnd.order+json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
          application/vnd.restbucks.order+xml:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        "200":
          description: placeOrder successful execution
          content:
            application/vnd.restbucks.payment+json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    format: int32
            application/vnd.restbucks.payment+xml:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    format: int32
          links:
            compensatingOperation:
              operationId: cancelOrder
  /http://restbucks.com/order/{id}:
    summary: activity-oriented endpoint
    put:
      tags:
      - RESTBucksProvider-Orders
      summary: ""
      description: unspecified operation responsibility
      operationId: Orders-updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        "200":
          description: updateOrder successful execution
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: int32
    delete:
      tags:
      - RESTBucksProvider-Orders
      summary: ""
      description: unspecified operation responsibility
      operationId: Orders-cancelOrder
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: cancelOrder successful execution
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    patch:
      tags:
      - RESTBucksProvider-Orders
      summary: read and write
      description: This operation realizes the [State Transition Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation.html)
        pattern.
      operationId: Orders-updateAmount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newAmount:
                  type: integer
                  format: int32
      responses:
        "200":
          description: updateAmount successful execution
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: int32
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
  /http://restbucks.com/order/payment/{id}:
    summary: activity-oriented endpoint
    put:
      tags:
      - RESTBucksProvider-PaymentResource
      summary: read and write
      description: This operation realizes the [State Transition Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation.html)
        pattern.
      operationId: PaymentResource-acceptPayment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDTO'
      responses:
        "200":
          description: acceptPayment successful execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDTO'
        "401":
          description: Payment Problem
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  info:
                    type: string
      security:
      - OnlyAuthenticatedShoppers: []
    post:
      tags:
      - RESTBucksProvider-PaymentResource
      summary: read and write
      description: This operation realizes the [State Transition Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation.html)
        pattern.
      operationId: PaymentResource-prepareOrderViaBarista
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
      responses:
        "200":
          description: prepareOrderViaBarista successful execution
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
  /http://restbucks.com/order/receipt/{id}:
    summary: activity-oriented endpoint
    delete:
      tags:
      - RESTBucksProvider-ReceiptResource
      summary: read and write
      description: This operation realizes the [State Transition Operation](https://microservice-api-patterns.org/patterns/responsibility/operationResponsibilities/StateTransitionOperation.html)
        pattern.
      operationId: ReceiptResource-handOutAndConcludeProcess
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: handOutAndConcludeProcess successful execution
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        x-743:
          description: n/a
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  info:
                    type: string
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
components:
  schemas:
    OrderDTO:
      minItems: 1
      type: array
      items:
        type: object
        properties:
          milk:
            type: string
          size:
            type: string
          drink:
            type: string
          amount:
            type: integer
            format: int32
    PaymentDTO:
      type: object
      properties:
        means:
          type: string
        authToken:
          type: string
          format: binary
        amount:
          type: integer
          format: int32
  securitySchemes:
    OnlyAuthenticatedShoppers:
      type: http
      description: Default Element Name (Feature NYI)
      scheme: basic
